{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek/Desktop/Group Games/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MainMenu from './components/MainMenu';\nimport GameSetup from './components/GameSetup';\nimport PlayerSelection from './components/PlayerSelection';\nimport WordReveal from './components/WordReveal';\nimport VotingScreen from './components/VotingScreen';\nimport ResultsScreen from './components/ResultsScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('main-menu');\n  const [players, setPlayers] = useState([]);\n  const [gameConfig, setGameConfig] = useState({\n    playerCount: 8,\n    imposterCount: 2,\n    showCategoryToImposter: false,\n    showHintToImposter: true\n  });\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [secretWord, setSecretWord] = useState('');\n  const [gameResults, setGameResults] = useState(null);\n  const resetGame = () => {\n    setGameState('main-menu');\n    setPlayers([]);\n    setCurrentPlayerIndex(0);\n    setSecretWord('');\n    setGameResults(null);\n  };\n  const startImposterGame = () => {\n    setGameState('game-setup');\n  };\n  const startCategoryGame = () => {\n    // TODO: Implement category game\n    alert('Category game coming soon!');\n  };\n  const renderCurrentScreen = () => {\n    switch (gameState) {\n      case 'main-menu':\n        return /*#__PURE__*/_jsxDEV(MainMenu, {\n          onStartImposter: startImposterGame,\n          onStartCategory: startCategoryGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this);\n      case 'game-setup':\n        return /*#__PURE__*/_jsxDEV(GameSetup, {\n          gameConfig: gameConfig,\n          onConfigChange: setGameConfig,\n          onStartGame: () => setGameState('player-selection'),\n          onBack: () => setGameState('main-menu')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      case 'player-selection':\n        return /*#__PURE__*/_jsxDEV(PlayerSelection, {\n          gameConfig: gameConfig,\n          players: players,\n          onPlayersChange: setPlayers,\n          onStartGame: () => setGameState('word-reveal'),\n          onBack: () => setGameState('game-setup')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this);\n      case 'word-reveal':\n        return /*#__PURE__*/_jsxDEV(WordReveal, {\n          players: players,\n          gameConfig: gameConfig,\n          currentPlayerIndex: currentPlayerIndex,\n          onNextPlayer: index => {\n            if (index >= players.length) {\n              setGameState('voting');\n            } else {\n              setCurrentPlayerIndex(index);\n            }\n          },\n          onBack: () => setGameState('player-selection')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this);\n      case 'voting':\n        return /*#__PURE__*/_jsxDEV(VotingScreen, {\n          players: players,\n          onVoteComplete: results => {\n            setGameResults(results);\n            setGameState('results');\n          },\n          onBack: () => setGameState('word-reveal')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n      case 'results':\n        return /*#__PURE__*/_jsxDEV(ResultsScreen, {\n          results: gameResults,\n          players: players,\n          onPlayAgain: resetGame,\n          onBackToMenu: resetGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(MainMenu, {\n          onStartImposter: startImposterGame,\n          onStartCategory: startCategoryGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-dark-purple text-white\",\n    children: renderCurrentScreen()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TxS9zapjseql2wfciWQu1IIdHXA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MainMenu","GameSetup","PlayerSelection","WordReveal","VotingScreen","ResultsScreen","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","players","setPlayers","gameConfig","setGameConfig","playerCount","imposterCount","showCategoryToImposter","showHintToImposter","currentPlayerIndex","setCurrentPlayerIndex","secretWord","setSecretWord","gameResults","setGameResults","resetGame","startImposterGame","startCategoryGame","alert","renderCurrentScreen","onStartImposter","onStartCategory","fileName","_jsxFileName","lineNumber","columnNumber","onConfigChange","onStartGame","onBack","onPlayersChange","onNextPlayer","index","length","onVoteComplete","results","onPlayAgain","onBackToMenu","className","children","_c","$RefreshReg$"],"sources":["/Users/abhishek/Desktop/Group Games/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport MainMenu from './components/MainMenu';\nimport GameSetup from './components/GameSetup';\nimport PlayerSelection from './components/PlayerSelection';\nimport WordReveal from './components/WordReveal';\nimport VotingScreen from './components/VotingScreen';\nimport ResultsScreen from './components/ResultsScreen';\n\nexport type GameState = \n  | 'main-menu'\n  | 'game-setup'\n  | 'player-selection'\n  | 'word-reveal'\n  | 'voting'\n  | 'results';\n\nexport interface Player {\n  id: string;\n  name: string;\n  isImposter: boolean;\n  word?: string;\n  votes: number;\n}\n\nexport interface GameConfig {\n  playerCount: number;\n  imposterCount: number;\n  showCategoryToImposter: boolean;\n  showHintToImposter: boolean;\n}\n\nfunction App() {\n  const [gameState, setGameState] = useState<GameState>('main-menu');\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [gameConfig, setGameConfig] = useState<GameConfig>({\n    playerCount: 8,\n    imposterCount: 2,\n    showCategoryToImposter: false,\n    showHintToImposter: true,\n  });\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [secretWord, setSecretWord] = useState('');\n  const [gameResults, setGameResults] = useState<{\n    winner: 'crew' | 'imposter';\n    imposterRevealed: boolean;\n    imposters: Player[];\n  } | null>(null);\n\n  const resetGame = () => {\n    setGameState('main-menu');\n    setPlayers([]);\n    setCurrentPlayerIndex(0);\n    setSecretWord('');\n    setGameResults(null);\n  };\n\n  const startImposterGame = () => {\n    setGameState('game-setup');\n  };\n\n  const startCategoryGame = () => {\n    // TODO: Implement category game\n    alert('Category game coming soon!');\n  };\n\n  const renderCurrentScreen = () => {\n    switch (gameState) {\n      case 'main-menu':\n        return (\n          <MainMenu\n            onStartImposter={startImposterGame}\n            onStartCategory={startCategoryGame}\n          />\n        );\n      case 'game-setup':\n        return (\n          <GameSetup\n            gameConfig={gameConfig}\n            onConfigChange={setGameConfig}\n            onStartGame={() => setGameState('player-selection')}\n            onBack={() => setGameState('main-menu')}\n          />\n        );\n      case 'player-selection':\n        return (\n          <PlayerSelection\n            gameConfig={gameConfig}\n            players={players}\n            onPlayersChange={setPlayers}\n            onStartGame={() => setGameState('word-reveal')}\n            onBack={() => setGameState('game-setup')}\n          />\n        );\n      case 'word-reveal':\n        return (\n          <WordReveal\n            players={players}\n            gameConfig={gameConfig}\n            currentPlayerIndex={currentPlayerIndex}\n            onNextPlayer={(index) => {\n              if (index >= players.length) {\n                setGameState('voting');\n              } else {\n                setCurrentPlayerIndex(index);\n              }\n            }}\n            onBack={() => setGameState('player-selection')}\n          />\n        );\n      case 'voting':\n        return (\n          <VotingScreen\n            players={players}\n            onVoteComplete={(results) => {\n              setGameResults(results);\n              setGameState('results');\n            }}\n            onBack={() => setGameState('word-reveal')}\n          />\n        );\n      case 'results':\n        return (\n          <ResultsScreen\n            results={gameResults!}\n            players={players}\n            onPlayAgain={resetGame}\n            onBackToMenu={resetGame}\n          />\n        );\n      default:\n        return <MainMenu onStartImposter={startImposterGame} onStartCategory={startCategoryGame} />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-dark-purple text-white\">\n      {renderCurrentScreen()}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}